--Problem
--*****************************************************************
You are given three tables: Students, Friends and Packages. Students contains two columns: ID and Name. Friends contains two columns: ID and Friend_ID (ID of the ONLY best friend). Packages contains two columns: ID and Salary (offered salary in $ thousands per month).

Students                     Friends                      Packages
+-----------------------+    +-----------------------+    +-----------------------+
| Column     | Type     |    | Column     | Type     |    | Column     | Type     |
+-----------------------+    +-----------------------+    +-----------------------+
| ID         | INTEGER  |    | ID         | INTEGER  |    | ID         | INTEGER  |
| Name       | STRING   |    | Friend_ID  | INTEGER  |    | Salary     | FLOAT    |
+-----------------------+    +-----------------------+    +-----------------------+


Write a query to output the names of those students whose best friends got offered a higher salary than them. Names must be ordered by the salary amount offered to the best friends. It is guaranteed that no two students got same salary offer.
--*****************************************************************

--output: 
    --name
--conditions:
    --best friends have higher salary offer
    --order by: salary offered to best friend ASC
    --**no two students offered same salary

--Solution
WITH friend_salary AS (
SELECT 
    f.friend_id 
    ,p.salary 
FROM friends f
INNER JOIN packages p ON f.friend_id = p.id 
)

SELECT 
    s.name 
FROM students s
INNER JOIN friends f ON f.id = s.id
INNER JOIN packages p ON p.id = s.id 
INNER JOIN friend_salary fs ON fs.friend_id = f.friend_id
WHERE 
    fs.salary > p.salary
ORDER BY fs.salary ASC
;
