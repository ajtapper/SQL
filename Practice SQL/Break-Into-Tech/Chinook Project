# These questions utilize the Chinook DataSet found on Kaggle 

/* 1. Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to"). */
SELECT 
	FirstName
	,LastName
	,CustomerID
	,Country
FROM customers
WHERE Country <> 'USA'
;

/* 2. Show only the Customers from Brazil. */
SELECT 
    FirstName
    ,LastName
    ,CustomerID
    ,Country
FROM customers
WHERE Country = 'Brazil'
;

/* 3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country. */
SELECT 
	c.FirstName
	,c.LastName
	,i.invoiceid
	,i.invoicedate
	,i.billingCountry
FROM customers c
JOIN invoices i 
ON c.customerid = i.customerid
WHERE c.country = 'Brazil' 
;

/* 4. Show the Employees who are Sales Agents. */
SELECT
	FirstName
	,LastName
	,Title
FROM employees
WHERE Title = 'Sales Support Agent'
;

/* 5. Find a unique/distinct list of billing countries from the Invoice table. */
SELECT DISTINCT
	BillingCountry
FROM invoices
ORDER BY BillingCountry asc
;

/* 6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name. */
SELECT 
    emp.LastName
    ,emp.FirstName
    ,inv.invoiceid
FROM employees emp
JOIN customers cus
ON cus.supportrepid = emp.employeeid
JOIN invoices inv
ON inv.customerid = cus.customerid
ORDER BY emp.LastName asc
;

/* 7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers. */
SELECT
	cus.LastName AS Customer_Last
	,cus.FirstName AS Customer_First
	,cus.Country 
	,emp.LastName AS Agent_Last
	,emp.FirstName AS Agent_First
	,inv.total 
FROM customers cus
JOIN invoices inv
	ON inv.customerid = cus.customerid
JOIN employees emp
	ON cus.supportrepid = emp.employeeid
ORDER BY Customer_Last, inv.total asc
;

/* 8. How many Invoices were there in 2009? */
SELECT DISTINCT
	COUNT(inv.invoiceid) Total_Invoices
FROM invoices inv
WHERE InvoiceDate LIKE '2009%'
;

/* 9. What are the total sales for 2009? */
SELECT DISTINCT
    ROUND(SUM(inv.total),2) AS Total_Sales
FROM invoices inv
WHERE InvoiceDate LIKE '2009%'
;

/* 10. Write a query that includes the purchased track name with each invoice line ID. */
SELECT 
	inv.invoiceid
	,t.Name
FROM invoice_items inv
JOIN tracks t 
ON t.trackid = inv.trackid
ORDER BY inv.invoiceid asc
;

/* 11. Write a query that includes the purchased track name AND artist name with each invoice line ID. */ 
SELECT
	t.Name as Track_Name
	,a.Name as Artist_Name
	,i.invoiceid
FROM invoice_items i 
JOIN tracks t 
	ON t.trackid = i.trackid
JOIN albums al 
	ON al.albumid = t.albumid
JOIN artists a 
	ON a.artistid = al.artistid
;

/* 12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre. */
SELECT 
    t.Name as Track_Name
    ,al.Title as Album_Name
    ,m.Name as Media_Type
    ,g.Name as Genre
FROM tracks t
JOIN genres g 
    ON g.genreid = t.genreid
JOIN media_types m
    ON m.mediatypeid = t.mediatypeid
JOIN albums al
    ON t.albumid = al.albumid
ORDER BY t.trackid asc
;

/* 13. Show the total sales made by each sales agent. */
SELECT 
    ROUND(SUM(i.total),2) AS Total_Sales
    ,e.FirstName AS Agent_First
    ,e.LastName AS Agent_Last
FROM invoices i
JOIN customers c 
    ON i.customerid = c.customerid
JOIN employees e
    ON c.supportrepid = e.employeeid
GROUP BY Agent_First, Agent_Last
ORDER BY Total_Sales ASC
;

/* 14. Which sales agent made the most dollars in sales in 2009? */
SELECT 
    ROUND(SUM(i.total),2) AS Total_Sales
    ,e.FirstName AS Agent_First
    ,e.LastName AS Agent_Last
FROM invoices i
JOIN customers c 
    ON i.customerid = c.customerid
JOIN employees e
    ON c.supportrepid = e.employeeid
WHERE i.InvoiceDate LIKE '2009%'
GROUP BY Agent_First, Agent_Last
ORDER BY Total_Sales DESC
LIMIT 1
;

/* 15. 

