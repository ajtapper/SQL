--Problem
--**************************************************
/* Amber's conglomerate corporation just acquired some new companies. Each of the companies follows this hierarchy:
Founder -> Lead Manager -> Senior Mangaer -> Manager -> Employee

Given the table schemas below, write a query to print the company_code, founder name, total number of lead managers, total number of senior managers, total number of managers, and total number of employees. Order your output by ascending company_code.

Note:
- The tables may contain duplicate records.
- The company_code is string, so the sorting should not be numeric. For example, if the company_codes are C_1, C_2, and C_10, then the ascending company_codes will be C_1, C_10, and C_2.

--The following tables contain company data:

-Company: The company_code is the code of the company and founder is the founder of the company. 
+--------------------------------+
| Column              | Type     |
+--------------------------------+
| company_code        | STRING   |
| founder             | STRING   |
+--------------------------------+

-Lead_Manager: The lead_manager_code is the code of the lead manager, and the company_code is the code of the working company. 
+--------------------------------+
| Column              | Type     |
+--------------------------------+
| lead_manager_code   | STRING   |
| company_code        | STRING   |
+--------------------------------+

-Senior_Manager: The senior_manager_code is the code of the senior manager, the lead_manager_code is the code of its lead manager, and the company_code is the code of the working company. 
+--------------------------------+
| Column              | Type     |
+--------------------------------+
| senior_manager_code | STRING   |
| lead_manager_code   | STRING   |
| company_code        | STRING   |
+--------------------------------+

-Manager: The manager_code is the code of the manager, the senior_manager_code is the code of its senior manager, the lead_manager_code is the code of its lead manager, and the company_code is the code of the working company. 
+--------------------------------+
| Column              | Type     |
+--------------------------------+
| manager_code        | STRING   |
| senior_manager_code | STRING   |
| lead_manager_code   | STRING   |
| company_code        | STRING   |
+--------------------------------+

-Employee: The employee_code is the code of the employee, the manager_code is the code of its manager, the senior_manager_code is the code of its senior manager, the lead_manager_code is the code of its lead manager, and the company_code is the code of the working company.
+--------------------------------+
| Column              | Type     |
+--------------------------------+
| employeecode        | STRING   |
| manager_code        | STRING   |
| senior_manager_code | STRING   |
| lead_manager_code   | STRING   |
| company_code        | STRING   |
+--------------------------------+
--**************************************************

--Solution:
SELECT 
  c.company_code
  ,c.founder
  ,COUNT(DISTINCT e.lead_manager_code)
  ,COUNT(DISTINCT e.senior_manager_code)
  ,COUNT(DISTINCT e.manager_code)
  ,COUNT(DISTINCT e.employee_code)
FROM Employee e
INNER JOIN Company c
  ON e.company_code = c.company_code
GROUP BY c.company_code,c.founder
ORDER BY c.company_code asc
;
